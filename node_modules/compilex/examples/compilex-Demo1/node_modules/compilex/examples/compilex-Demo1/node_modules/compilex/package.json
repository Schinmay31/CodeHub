{
  "name": "compilex",
  "version": "0.4.0",
  "description": "compileX is a node.js library which is used to build online code editor/compiler websites and webservices.",
  "main": "compilex.js",
  "dependencies": {
    "cuid": "~1.2.4"
  },
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/scriptnull/compileX.git"
  },
  "keywords": [
    "compile",
    "compiler",
    "c",
    "c++",
    "compilex"
  ],
  "author": {
    "name": "Vishnu Bharathi",
    "email": "vishnubharathi04@gmail.com",
    "url": "https://twitter.com/scriptnull"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/scriptnull/compileX/issues"
  },
  "homepage": "https://github.com/scriptnull/compileX",
  "readme": "compileX\r\n========\r\ncompileX is a node.js library which is used to build online code editor/compiler websites and webservices.\r\n\r\nYou can compile and respond back outputs for all the languages that can be compiled by the server.\r\n\r\nSome of the online code compiling/judging websites are \r\n<ul>\r\n<li><a href=\"http://www.codepad.org\">codepad</a></li>\r\n<li><a href=\"http://www.ideone.com\">ideone</a></li>\r\n<li><a href=\"http://www.hackerrank.com\">HackerRank</a></li>\r\n<li><a href=\"http://www.codechef.com\">CodeChef</a></li>\r\n</ul>\r\nUsing compileX , you can built sites and services like the above said examples.\r\n\r\n\r\n\r\nWork Flow\r\n=========\r\n1)Get the program as input from the client as a request<br/>\r\n2)Use compileX modules to compile the program <br/>\r\n3)Get the output as String<br/>\r\n4)Respond the output to the client<br/>\r\n\r\nMandatory Steps \r\n===============\r\nInorder to compile any programming language , you need to first have the compiler for that programming language in the server machine.\r\n\r\nThe beta version of compileX supports the compilation of C and C++ only . I am sure that you could expect the successive builds with more programming languages added. I also look forward for some contributions to the repo.So feel free to play with compileX\r\n\r\n<h4>Compiling C and C++</h4>\r\n<ol>\r\n<li><b>Installation :</b>You need GCC compiler that can compile programs from your cmd/terminal\r\n    <ul>\r\n    <li>Windows - You can get <a href=\"http://www.mingw.org/\">MinGw</a> . </li>\r\n    <li>Linux - Most of the linux versions are installed with gcc by default. If you haven't got , Take a look at <a href=\"http://gcc.gnu.org/wiki/InstallingGCC\">Installing GCC</a> . </li>\r\n    </ul>\r\n</li>\r\n<li><b>Testing the Environment :</b>After installing , set your environment variables for accessing the GCC command lines from any directory\r\n    <ul>\r\n    <li>Windows - create a c file in a directory , execute <br/> \r\n    <i><b>g++ filename.c -o output.exe<br/>\r\n    output.exe</b></i><br/>\r\n    then you will get the output of the program</li>\r\n    <li>Linux - create a c file in a directory , execute <br/>\r\n    <i><b>gcc filename.c -o output.out<br/>\r\n    ./output.out</b></i><br />\r\n    then you will get the output of the program</li>\r\n    </ul>\r\n<li><b>Jump Start : </b> get compileX via npm <br/>\r\n    <i><b>npm install compilex</b></i><br/>\r\n    </li>\r\n</ol>\r\n\r\n\r\nDocumentation\r\n=============\r\n<h5>1)Require compileX </h5>\r\n```javascript\r\nvar compiler = require('compilex');\r\ncompiler.init();\r\n```\r\ninit() creates a folder named temp in your project directory which is used for storage purpose.\r\nBefore using other methods , make sure to call init() method.\r\n\r\n<h5>2)Compiling C and C++ </h5>\r\n```javascript\r\n    //if windows  \r\n    var envData = { OS : \"windows\" , cmd : \"g++\"}; // (uses g++ command to compile )\r\n    //else\r\n    var envData = { OS : \"linux\" , cmd : \"gcc\" }; // ( uses gcc command to compile )\r\n    compiler.compileCPP(envData , code , function (output) {\r\n    \tres.send(output);\r\n    });\r\n    \r\n    //res is the response object\r\n```\r\n\r\n<h5>3)Compiling C and C++ with inputs ( providing stdin ) </h5>\r\n```javascript\r\n    //if windows  \r\n    var envData = { OS : \"windows\" , cmd : \"g++\"}; // (uses g++ command to compile )\r\n    //else\r\n    var envData = { OS : \"linux\" , cmd : \"gcc\" }; // ( uses gcc command to compile )\r\n    compiler.compileCPPWithInput(envData , code , input , function (output) {\r\n    \tres.send(output);\r\n    });\r\n    \r\n    //res is the response object\r\n```\r\n\r\n<h5>4)Memory Management </h5>\r\nAll the temporary files ( source code and executables ) are created in your temp directory.\r\nflush and flushSync helps you to free the memory by deleting the temporary files.\r\n```javascript\r\n    compiler.flush(function(){\r\n    console.log('All temporary files flushed !'); \r\n    });\r\n```\r\nSynchronous version of flush\r\n```javascript\r\n    compiler.flushSync();\r\n```\r\nExamples\r\n========\r\nYou can find examples <a href=\"examples\">here</a>.The examples are downloaded everytime you download compileX via npm.\r\nyou can begin with editing CSS and publish your site in minutes.\r\n\r\nLicense\r\n=======\r\nAll the contents in this repository are released under the <a href=\"https://github.com/scriptnull/compileX/blob/master/License.md\">MIT License</a> .\r\n",
  "readmeFilename": "README.md",
  "_id": "compilex@0.1.3",
  "_from": "compilex@"
}
